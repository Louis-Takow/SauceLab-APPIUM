name: Appium Tests with WebdriverIO

on:
  push:
    branches: [main, feature/*]
  pull_request:
    branches: [main, feature/*]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Set Up Java & Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Required Android SDK Components
        run: |
          echo "Installing required SDK components..."
          sdkmanager --install "platform-tools" "emulator" "cmdline-tools;latest" "system-images;android-30;google_apis_playstore;x86_64"
          echo "SDK setup complete."

      - name: Start Appium Server
        run: |
          npm install -g appium
          appium --version
          nohup appium --port 4723 --log appium.log > /dev/null 2>&1 &

      - name: Create and Start Android Emulator
        run: |
          echo "Creating and starting Android Emulator..."
          echo "no" | avdmanager create avd -n test-emulator -k "system-images;android-30;google_apis_playstore;x86_64" --device "pixel"
          $ANDROID_HOME/emulator/emulator -avd test-emulator -no-audio -no-window -gpu swiftshader_indirect -no-boot-anim > /dev/null 2>&1 &

      - name: Wait for Emulator to Boot
        run: |
          echo "Waiting for emulator to boot..."
          adb wait-for-device
          timeout=300
          interval=10
          elapsed=0
          while [[ "$(adb shell getprop sys.boot_completed | tr -d '\r')" != "1" ]]; do
            if [ $elapsed -ge $timeout ]; then
              echo "Timeout waiting for emulator to boot."
              exit 1
            fi
            echo "Still waiting... ($elapsed/$timeout seconds)"
            sleep $interval
            elapsed=$((elapsed + interval))
          done
          echo "Emulator booted successfully!"
          adb devices

      - name: Run WebdriverIO Tests
        run: npm test

      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: test-results/

      - name: Stop Emulator
        run: adb -s emulator-5554 emu kill
